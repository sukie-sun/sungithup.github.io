[{"title":"手动安装maven坐标依赖","date":"2018-12-27T18:16:47.000Z","path":"2018/12/28/手动安装maven坐标依赖/","text":"手动安装maven坐标依赖一、事件原因：学习quartz框架时，在maven项目的pom.xml文件中添加quartz所需要的坐标依赖时，显示jar包不存在。 12345678910111213提示：\"Dependency 'xxxx‘ not found\"， 并且添加的如下两个坐标依赖均报红。 &lt;dependency&gt; &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt; &lt;artifactId&gt;quartz&lt;/artifactId&gt; &lt;version&gt;2.3.0&lt;/version&gt; &lt;/dependency&gt; &lt;!-- 工具 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt; &lt;artifactId&gt;quartz-jobs&lt;/artifactId&gt; &lt;version&gt;2.3.0&lt;/version&gt; &lt;/dependency&gt; 分析： 1、maven项目所需要的jar包均存放在maven的F:\\m2\\repository(项目所需的jar包仓库)文件夹中 2、在F:\\apache-maven-3.5.4\\conf的settings.xml文件中有如下设置：（由于使用远程仓库太慢，阿里云给我们提供了一个镜像仓库，便于我们使用，且只包含central仓库中的jar） 1234567&lt;!--文件中原有的配置：远程仓库---&gt;&lt;mirror&gt; &lt;id&gt;mirrorId&lt;/id&gt; &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt; &lt;/mirror&gt; 1234567&lt;!--文件中自己手动配置：阿里镜像仓库---&gt;&lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Nexus aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;/mirror&gt; 3.可是我们在https://mvnrepository.com/（maven仓库）中发现有我们要的jar包，而且就在Central仓库里，这里我们就很奇怪了，后来就选择还是手动安装jar包吧 （如果有小伙伴有别的解决方案，还请指点一二。） 1&lt;!--more--&gt; 二、解决方案1、首先，我们需要从maven Repository中下载我们需要的jar包（需要的两个jar包，下载原理相同） 2、注意我们的maven安装，需要配置环境变量，才能在dos窗口，指令安装jar包 因为我之前查资料时，有小伙伴说，java的环境变量配置也会影响，所以，我在这里也把java的环境变量配置也贴出来 JAVA_HOME F:\\Java\\jdk1.8.0_131（ 根据自己的jdk安装目录） CLASSPATH .;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar MAVEN_HOME F:\\apache-maven-3.5.4（ 根据自己maven安装目录） Path（注意配置的时候，一定要和配置home时的变量名一致，如MAVEN_HOME,我配置成了%MVN_HOME%\\bin;） %JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;%SystemRoot%\\system32;%SystemRoot%;%SystemRoot%\\System32\\Wbem;%SYSTEMROOT%\\System32\\WindowsPowerShell\\v1.0\\;%MYSQL_HOME%\\bin;%MAVEN_HOME%\\bin; 配置这些环境变量，在dos窗口才能使java ，mvn 之类的指令可以用； 否则会出现如下显示。 ‘mvn’ 不是内部或外部命令，也不是可运行的程序 (这就是环境变量没有配成功的结果) 3.安装 C:\\Users\\Administrator&gt;mvn -v C:\\Users\\Administrator&gt;mvn install:install-file -Dfile=F:/apache-maven-3.5.4/m2/quartz-2.3.0.jar（jar包所在路径） -DgroupId=org.quartz-scheduler -DartifactId=quartz -Dversion=2.3.0 -Dpackaging=jar （根据下面所示的配置groupId、artifactId、version） 12345&lt;dependency&gt; &lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt; &lt;artifactId&gt;quartz&lt;/artifactId&gt; &lt;version&gt;2.3.0&lt;/version&gt; &lt;/dependency&gt; 如图所示，安装成功。","tags":[{"name":"maven","slug":"maven","permalink":"http://sungithup.github.io/tags/maven/"}]},{"title":"安装数据库MySQL8.0.12","date":"2018-12-18T18:04:31.416Z","path":"2018/12/19/数据库MySQL重装之MySQL-8.0.12-winx64/","text":"数据库MySQL重装之MySQL-8.0.12-winx641、安装方式：压缩包安装资源： 2、随笔：（待完善）1234567891011121314151617181920212223242526272829303132333435363738394041424344高版本MySQL：mysql-8.0.12-winx64数据库启动：net start mysqlmysql -h localhost -u root -p密码：111111修改密码： alter user user() identified by \"123456\";退出：quit；连接navicat：1、在bin目录下：cmdG:\\MySQL\\mysql-8.0.12-winx64\\bin&gt;mysqladmin -u root -p password 1234562、密码：Enter password:1234563、登录：G:\\MySQL\\mysql-8.0.12-winx64\\bin&gt;mysql -u root -p密码：Enter password:1234564、设置连接密码：mysql&gt;ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '123456';5、刷新权限：mysql&gt; flush privileges;数据库连接OK！啦项目中数据库配置：pom.xml中的坐标依赖： &lt;!-- mysql 驱动包 --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.11&lt;/version&gt; &lt;/dependency&gt;jdbc.properties配置文件中：jdbc.driver=com.mysql.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306/p2p?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8jdbc.user=rootjdbc.password=123456","tags":[]},{"title":"支付宝支付流程","date":"2018-12-18T18:04:31.336Z","path":"2018/12/19/支付宝支付流程：/","text":"支付宝支付流程沙箱环境初始化配置：看懂第三方集成文档 1、能够看懂在线api文档说明（html） 七牛（控制台配置流程，api文档，sdk下载与集成） 阿里云短信（控制台配置-短信签名 短信模板 基本文档 sdk具体使用-下载与集成） 实名校验（借助第三方） 契约锁（电子合同-在线盖章） 支付宝沙箱环境（基本文档说明-密码生成 sdk集成 流程分析） 支付请求发起：（商户系统主动发起）商户系统：准备核心参数 ​ 订单编号 订单名称 订单金额 订单描述 ​ 编码 支付使用api version 加密串 第三方（支付宝）：接收商户系统提交的请求参数 ​ 加密传输校验 用户是否登录（支付宝系统） 业务处理： 订单（账户充值）产生 加入数据库 才能发起请求。 支付回调处理：（第三方主动请求的行为）处理订单更新业务： ​ 同步回调（占用当前请求连接-存在阻塞）：在页面可以看到具体跳转操作 ​ 异步回调（不会占用-不存在）：在后台另起线程实现，弥补同步意外情况（窗口意外关闭，网络延迟） （思考：微信支付，第三方银行接口支付） 共同点：包含支付发起操作和支付回调操作","tags":[]},{"title":"Hello World","date":"2018-12-18T17:38:10.052Z","path":"2018/12/19/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]